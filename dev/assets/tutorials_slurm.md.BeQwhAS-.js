import{_ as i,c as a,o as n,aA as l}from"./chunks/framework.Cl0udZi9.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/slurm.md","filePath":"tutorials/slurm.md","lastUpdated":null}'),t={name:"tutorials/slurm.md"};function e(p,s,h,k,r,d){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h2 id="Slurm-jobs" tabindex="-1">Slurm jobs <a class="header-anchor" href="#Slurm-jobs" aria-label="Permalink to &quot;Slurm jobs {#Slurm-jobs}&quot;">â€‹</a></h2><p>Slurm is an open source, fault-tolerant, and highly scalable cluster management and job scheduling system for large and small Linux clusters. See <a href="https://slurm.schedmd.com/overview.html" target="_blank" rel="noreferrer">slurm</a> for more information.</p><p>Here, we provide only a minimal script <code>q10_slurm.sh</code> to get you started!</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-CnJ2L" id="tab-Ff29xp1" checked><label data-title="q10_slurm.sh" for="tab-Ff29xp1">q10_slurm.sh</label><input type="radio" name="group-CnJ2L" id="tab-2nWhUX9"><label data-title="q10_slurm.jl" for="tab-2nWhUX9">q10_slurm.jl</label><input type="radio" name="group-CnJ2L" id="tab-in_Oja7"><label data-title="sbatch" for="tab-in_Oja7">sbatch</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#SBATCH --job-name=q10_fluxnet</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#SBATCH --ntasks=1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#SBATCH --cpus-per-task=2</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#SBATCH --mem-per-cpu=6GB</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#SBATCH --time=00:10:00 # 10 minutes!</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#SBATCH --array=0-4  # 5 jobs(experiments)!</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#SBATCH -o /u/slurm_output/q10_fluxnet-%A_%a.out # create this folder \`/u/slurm_output\` in advance in your file system</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> load</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> proxy</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> load</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> julia/1.11.4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JULIA_NUM_THREADS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${SLURM_CPUS_PER_TASK}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SLURM_ARRAY_TASK_ID</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Running with: id=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run the program with calculated parameters</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">julia</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --heap-size-hint=16G</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> q10_slurm.jl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $id</span></span></code></pre></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># julia script</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EasyHybrid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">slurm_array_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Int, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ARGS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># get from command line argument</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;SLURM_ARRAY_ID = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$slurm_array_id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># submit your job to the cluster!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">u@hpc-node:~/project</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sbatch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> q10_slurm.sh</span></span></code></pre></div></div></div>`,4)])])}const u=i(t,[["render",e]]);export{c as __pageData,u as default};
